version: "3.9"
x-generic: &generic
  networks:
    - micado_net_dev
  logging:
    options:
      max-size: "12m"
      max-file: "5"
    driver: json-file

services:
  # DATABASE STUFF
  micado_db:    # MICADO DB
    image: groonga/pgroonga:${PGROONGA_IMAGE_TAG}
#    user: postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
      - type: volume
        source: postgres_init
        target: /docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    labels:
      com.centurylinklabs.watchtower.enable: "false"
      docker_compose_diagram.cluster: "Database"
      docker_compose_diagram.icon: "diagrams.onprem.database.Postgresql"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    <<: *generic

  # Identity management
  keycloak:     # IDENTITY SERVER
    image: quay.io/keycloak/keycloak:${KEYCLOAK_IMAGE_TAG}
    command: ["start-dev", "--import-realm"]
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_DB_URL: "jdbc:postgresql://micado_db:5432/${POSTGRES_DB}"
      KC_DB_SCHEMA: ${KEYCLOAK_DB_SCHEMA}
      KC_METRICS_ENABLED: true
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}
      KC_REALM_NAME: ${KC_REALM_NAME}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      GF_URL: ${GF_HOSTNAME}:${GF_SERVER_HTTP_PORT}
      GF_ADMIN_USERNAME: ${GF_ADMIN_USERNAME}
      GF_ADMIN_PASSWORD: ${GF_ADMIN_PASSWORD}
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: 'true'
      KEYCLOAK_ENABLE_STATISTICS: 'true'
      KC_HOSTNAME: ${IDENTITY_HOSTNAME}
      KC_HOSTNAME_PORT: ${IDENTITY_HOSTNAME_PORT}
      KC_PROXY: edge
      KC_PROXY_ADDRESS_FORWARDING: 'true'
      KC_HTTP_ENABLED: 'true'
      MIGRANTS_HOSTNAME: ${MIGRANTS_HOSTNAME}
      PA_HOSTNAME: ${PA_HOSTNAME}
      NGO_HOSTNAME: ${NGO_HOSTNAME}
      NGO_REALM_CLIENT_SECRET: ${NGO_REALM_CLIENT_SECRET}
      MIGRANT_REALM_CLIENT_SECRET: ${MIGRANT_REALM_CLIENT_SECRET}
      PA_REALM_CLIENT_SECRET: ${PA_REALM_CLIENT_SECRET}
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    ports:
      - "8080:8080"
    labels:
      traefik.enable: "true"
      traefik.http.routers.keycloak.rule: "Host(`${IDENTITY_HOSTNAME}`)"
      traefik.http.routers.keycloak.service: keycloak
      traefik.http.routers.keycloak.entrypoints: web,websecure
      traefik.http.services.keycloak.loadbalancer.server.port: "8080"  
      traefik.http.routers.keycloak.tls: "true"
      traefik.http.routers.keycloak.tls.certresolver: letsencrypt
      traefik.http.services.keycloak.loadbalancer.passhostheader: "true"
      docker_compose_diagram.cluster: "Auth"  
      docker_compose_diagram.icon: "keycloak.png"
    restart: unless-stopped
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json:ro
      - ./keycloak/themes:/opt/keycloak/themes:ro
    depends_on:
      micado_db:
        condition: service_healthy
        restart: true
    <<: *generic

  backend:
    image: micadoproject/micado_backend:18.19.1
    stdin_open: true
    tty: true
    volumes:
      - type: volume
        source: backend
        target: /code
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - type: volume
        source: shared_images
        target: /images
    tmpfs: /tmp/translations
    ports:
      - "3000:3000"
    #     - "8080:8080"
    #    command: /bin/sh -c "cd backend && npm start"
    command: /bin/sh -c "bash"
    env_file:
      - .env
      - prod.env
    environment:
      - MICADO_GIT_URL=${MICADO_GIT_URL}
      - ROCKETCHAT_HOSTNAME=${ROCKETCHAT_HOSTNAME}
      - ROCKETCHAT_ADMIN=${ROCKETCHAT_ADMIN}
      - ROCKETCHAT_ADMIN_PWD=${ROCKETCHAT_ADMIN_PWD}
      # don't use the /tmp/translations from tmpfs because it gives a permission error (have to fix this).
      - MICADO_TRANSLATIONS_DIR=/tmp/translations-repo
      - POSTGRES_DB=${POSTGRES_DB}
      - MICADO_DB_PWD=${MICADO_DB_PWD}
      - MICADO_DB_USER=${MICADO_DB_USER}
      - MICADO_DB_SCHEMA=${MICADO_DB_SCHEMA}
      - MICADO_ENV=${MICADO_ENV}
      - IDENTITY_HOSTNAME=${IDENTITY_HOSTNAME}
      - WEBLATE_EMAIL_HOST=${WEBLATE_EMAIL_HOST}
      - WEBLATE_EMAIL_HOST_USER=${WEBLATE_EMAIL_HOST_USER}
      - WEBLATE_EMAIL_HOST_SSL=${WEBLATE_EMAIL_HOST_SSL}
      - WEBLATE_EMAIL_HOST_PASSWORD=${WEBLATE_EMAIL_HOST_PASSWORD}
      - ANALYTIC_HOSTNAME=${ANALYTIC_HOSTNAME}
      - COUNTLY_MIGRANTS_APP_ID=${COUNTLY_MIGRANTS_APP_ID}
      - COUNTLY_MIGRANTS_API_KEY=${COUNTLY_MIGRANTS_API_KEY}
      - COUNTLY_ADMIN=${COUNTLY_ADMIN}
      - COUNTLY_ADMIN_PWD=${COUNTLY_ADMIN_PWD}
      - ALGORITHM=${ALGORITHM}
      - SALT=${SALT}
      - KEY_LENGTH=${KEY_LENGTH}
      - BUFFER_0=${BUFFER_0}
      - BUFFER_1=${BUFFER_1}
      - ALGORITHM_PASSWORD=${ALGORITHM_PASSWORD}
    <<: *generic


  git:               # GIT SERVER
    image: gitea/gitea:${GITEA_IMAGE_TAG}
    <<: *generic
#    env_file:
#      - prod.env
    environment:
      GIT_HOSTNAME: ${GIT_HOSTNAME}
      GITEA__database__DB_TYPE: postgres
      GITEA__database__HOST: micado_db:5432
      GITEA__database__NAME: ${POSTGRES_DB}
      GITEA__database__USER: ${GITEA_DB_USER}
      GITEA__database__PASSWD: ${GITEA_DB_PWD}
      GITEA__database__SCHEMA: ${GITEA_DB_SCHEMA}
      GITEA__sacurity__INSTALL_LOCK: "true"
      GITEA__service__DISABLE_REGISTRATION: "true"
    labels:
      com.centurylinklabs.watchtower.enable: "false" 
      traefik.enable: "true"
      traefik.http.routers.git1.rule: Host(`${GIT_HOSTNAME}`)
      traefik.http.routers.git1.entrypoints: web
      traefik.http.routers.git1.service: git1
      traefik.http.services.git1.loadbalancer.server.port: 3000
      traefik.http.routers.git2.rule: Host(`${GIT_HOSTNAME}`)
      traefik.http.routers.git2.entrypoints: websecure
      traefik.http.routers.git2.tls: "true"
      traefik.http.routers.git2.tls.certresolver: myresolver
      traefik.http.routers.git2.service: git2
      traefik.http.services.git2.loadbalancer.server.port: 3000
      docker_compose_diagram.cluster: Translation Platform
      docker_compose_diagram.icon: "diagrams.onprem.vcs.Gitea"
    volumes:
      - git_data:/data
 #     - ./config:/etc/gitea
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      micado_db:
        condition: service_healthy
        restart: true


volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: $PWD/db_data
      o: bind
  postgres_init:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: $PWD/db_init
      o: bind
  backend:
    driver: local
    driver_opts:
      type: none
      device: $PWD/application
      o: bind
  git_data:
    driver_opts:
      type: none
      device: $PWD/git_data
      o: bind
  shared_images:
    driver: local
    driver_opts:
      type: none
      device: $PWD/shared_images
      o: bind

networks:
  micado_net_dev:
    driver: bridge
